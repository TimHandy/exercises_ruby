Create a function squares(x,n) that starts with a number (x) and returns an array of length (n) with squares of the previous number. If n is negative or zero, return an empty array/list.

Examples

squares(2,5)=[2,4,16,256,65536]
squares(3,3)=[3,9,81]


Test.assert_equals(squares(2,5),[2,4,16,256,65536]);   
Test.assert_equals(squares(3,3),[3,9,81]);  
Test.assert_equals(squares(5,3),[5,25,625]);  
Test.assert_equals(squares(10,4),[10,100,10000,100000000]); 


def squares(x, n)

end















ANSWER ::::::::::::::::::::::::::::::

def squares(x, n)
  arr = []
  n.times do
    arr << x
    x = x * x
  end
  arr
end
